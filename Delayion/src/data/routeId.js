const routeId = {
  //A B C
  Z: [10609],
  S: [10606],
  W: [10607],
  R: [10605],
  K: [10603],
  X: [10608],

  //100+
  100: [10100],
  101: [10101],
  102: [10102],
  103: [10103],
  104: [10104],
  105: [10105],
  106: [10106],
  107: [10107],
  108: [10108],
  109: [10109],
  110: [10110],
  111: [10111],
  112: [10112],
  113: [10113],
  114: [10114],
  115: [10115],
  116: [10116],
  117: [10117],
  118: [10118],
  119: [10119],
  120: [10120],
  121: [10121],
  122: [10122],
  123: [10123],
  124: [10124],
  125: [10125],
  126: [10126],
  127: [10127],
  128: [10128],
  129: [10129],
  130: [10130],
  131: [10131],
  132: [10132],
  133: [10133],
  134: [10134],
  135: [10135],
  136: [10136],
  137: [10137],
  138: [10138],
  139: [10139],
  140: [10140],
  141: [10141],
  142: [10142],
  143: [10143],
  144: [10144],
  145: [10145],
  146: [10146],
  147: [10147],
  148: [10148],
  149: [10149],
  150: [10150],
  151: [10151],
  152: [10152],
  153: [10153],
  154: [10154],
  155: [10155],
  156: [10156],
  157: [10157],
  158: [10158],
  159: [10159],
  160: [10160],
  161: [10161],
  162: [10162],
  163: [10163],
  164: [10164],
  165: [10165],
  166: [10166],
  167: [10167],
  168: [10168],
  169: [10169],
  170: [10170],
  171: [10171],
  172: [10172],
  173: [10173],
  174: [10174],
  175: [10175],
  176: [10176],
  177: [10177],
  178: [10178],
  179: [10179],
  180: [10180],
  181: [10181],
  182: [10182],
  183: [10183],
  184: [10184],
  185: [10185],
  186: [10186],
  187: [10187],
  188: [10188],
  189: [10189],
  190: [10190],
  191: [10191],
  192: [10192],
  193: [10193],
  194: [10194],
  195: [10195],
  196: [10196],
  197: [10197],
  198: [10198],
  199: [10199],
  200: [10200],
  201: [10201],
  202: [10202],
  203: [10203],
  204: [10204],
  205: [10205],
  206: [10206],
  207: [10207],
  208: [10208],
  209: [10209],
  210: [10210],
  211: [10211],
  212: [10212],
  213: [10213],
  214: [10214],
  215: [10215],
  216: [10216],
  217: [10217],
  218: [10218],
  219: [10219],
  220: [10220],
  221: [10221],
  222: [10222],
  223: [10223],
  224: [10224],
  225: [10225],
  226: [10226],
  227: [10227],
  228: [10228],
  229: [10229],
  230: [10230],
  231: [10231],
  232: [10232],
  233: [10233],
  234: [10234],
  235: [10235],
  236: [10236],
  237: [10237],
  238: [10238],
  239: [10239],
  240: [10240],
  241: [10241],
  242: [10242],
  243: [10243],
  244: [10244],
  245: [10245],
  246: [10246],
  247: [10247],
  248: [10248],
  249: [10249],
  250: [10250],
  251: [10251],
  252: [10252],
  253: [10253],
  254: [10254],
  255: [10255],
  256: [10256],
  257: [10257],
  258: [10258],
  259: [10259],
  260: [10260],
  261: [10261],
  262: [10262],
  263: [10263],
  264: [10264],
  265: [10265],
  266: [10266],
  267: [10267],
  268: [10268],
  269: [10269],
  270: [10270],
  271: [10271],
  272: [10272],
  273: [10273],
  274: [10274],
  275: [10275],
  276: [10276],
  277: [10277],
  278: [10278],
  279: [10279],
  280: [10280],
  281: [10281],
  282: [10282],
  283: [10283],
  284: [10284],
  285: [10285],
  286: [10286],
  287: [10287],
  288: [10288],
  289: [10289],
  290: [10290],
  291: [10291],
  292: [10292],
  293: [10293],
  294: [10294],
  295: [10295],
  296: [10296],
  297: [10297],
  298: [10298],
  299: [10299],
  300: [10300],


  //1-99
1: [10001],
2: [10002],
3: [10003],
4: [10004],
5: [10005],
6: [10006],
7: [10007],
8: [10008],
9: [10009],
10: [10010],
11: [10011],
12: [10012],
13: [10013],
14: [10014],
15: [10015],
16: [10016],
17: [10017],
18: [10018],
19: [10019],
20: [10020],
21: [10021],
22: [10022],
23: [10023],
24: [10024],
25: [10025],
26: [10026],
27: [10027],
28: [10028],
29: [10029],
30: [10030],
31: [10031],
32: [10032],
33: [10033],
34: [10034],
35: [10035],
36: [10036],
37: [10037],
38: [10038],
39: [10039],
40: [10040],
41: [10041],
42: [10042],
43: [10043],
44: [10044],
45: [10045],
46: [10046],
47: [10047],
48: [10048],
49: [10049],
50: [10050],
51: [10051],
52: [10052],
53: [10053],
54: [10054],
55: [10055],
56: [10056],
57: [10057],
58: [10058],
59: [10059],
60: [10060],
61: [10061],
62: [10062],
63: [10063],
64: [10064],
65: [10065],
66: [10066],
67: [10067],
68: [10068],
69: [10069],
70: [10070],
71: [10071],
72: [10072],
73: [10073],
74: [10074],
75: [10075],
76: [10076],
77: [10077],
78: [10078],
79: [10079],
80: [10080],
81: [10081],
82: [10082],
83: [10083],
84: [10084],
85: [10085],
86: [10086],
87: [10087],
88: [10088],
89: [10089],
90: [10090],
91: [10091],
92: [10092],
93: [10093],
94: [10094],
95: [10095],
96: [10096],
97: [10097],
98: [10098],
99: [10099],
};

export const getRouteName = (id) => {
  for (const [name, ids] of Object.entries(routeId)) {
    if (ids.includes(id)) {
      return name;
    }
  }
  return id; // Return the id if no matching name is found
};

export default routeId;
